# -*- coding: utf-8 -*-
"""Proje_Odevi_Customer_Experience_Dataset_.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_XQSgsKQAee8AzLuJCuCv33MTs4AAqdE
"""

# # 1.000 kayıtlı, demografik + davranışsal verileri bir arada sunan ve analiz süreçlerinde etkin kontrol sağlayabileceğim boyuttaki Customer Experience veri setini seçtim.
#Amacım, müşterinin elde tutulma (retention) davranışını eksik/aykırı veri kontrolü, temel istatistikler ve görselleştirmelerle adım adım analiz etmek.

# Kütüphanelerin çağırılması

import pandas as pd
import numpy as np

# Datasetin yüklenmesi ve datasete genel bakış için ilk 5 müşterinin değişken değerleri
df_customer_experience  = pd.read_csv('/content/drive/MyDrive/customer_experience_data.csv')
print(df_customer_experience.head())

#dataseti 1000 satır ve 14 sutündan oluşmaktadır. 1000 müşteri ve 14 değişken vardır.
df_customer_experience.shape

# Veri setinde 3 tanesi encoded formda olmak üzere toplam  14 değişken bulunmaktadır.
#Gender_Encoded değişkeninde “Female” 0, “Male” 1 olarak kodlanmıştır
#Location_Encoded değişkeninde “Rural” 0, “Suburban” 1, “Urban” 2 değerleri kullanılmıştır.
# Retention_Status_Encoded değişkeninde “Churned” 0 ve “Retained” 1 kodlarıyla temsil edilmektedir.

#veri tiplerinin bulunması
df_customer_experience.dtypes

# Dataset hakkında bilgi
df_customer_experience .info()

# Verilerin istatiksel değerlerinin hesaplanması
df_customer_experience.describe()

#eksik veri bulma
# eksik veri bulunmamaktır.
eksik_veri= df_customer_experience.isnull().sum()
print(eksik_veri)

#aykırı değerlerin bulunması
#gerekli kütüphanelerin çağırılması

import seaborn as sns
import matplotlib.pyplot as plt

#age değişkeni için çok düşük ya da çok yüksek yaş girildi mi kontrol ediliyor
# age değişkeni için aykırı değer bulunmamaktadır.

sns.boxplot(x=df_customer_experience['Age'])
plt.title('Age - Boxplot')
plt.show()

#Num_Interactions için aykırı değer bulunmuyor
sns.boxplot(x=df_customer_experience['Num_Interactions'])
plt.title('Num_Interactions - Boxplot')
plt.show()

#kontrol amaçlı sayısal olarak inceleniyor, aykırı değer yok.
Q1 = df_customer_experience["Num_Interactions"].quantile(0.25)
Q3 = df_customer_experience["Num_Interactions"].quantile(0.75)
IQR = Q3 - Q1
lower = Q1 - 1.5 * IQR
upper = Q3 + 1.5 * IQR

outliers = df_customer_experience[(df_customer_experience["Num_Interactions"] < lower) | (df_customer_experience["Num_Interactions"] > upper)]
print(outliers.shape[0])

# Feedback_Score değişkeni sınırları belli bir değişken olduğu yanlış veri girişi olup olmadığı kontol ediliyor
#aykırı değer bulunmuyor
sns.boxplot(x=df_customer_experience['Feedback_Score'])
plt.title('Feedback_Score - Boxplot')
plt.show()

# Products_Purchased için aykırı değer bulunmuyor.
sns.boxplot(x=df_customer_experience['Products_Purchased'])
plt.title('Products_Purchased - Boxplot')
plt.show()

#kontrol amaçlı sayısal olarak inceleniyor, aykırı değer yok.
Q1 = df_customer_experience["Products_Purchased"].quantile(0.25)
Q3 = df_customer_experience["Products_Purchased"].quantile(0.75)
IQR = Q3 - Q1
lower = Q1 - 1.5 * IQR
upper = Q3 + 1.5 * IQR

outliers = df_customer_experience[(df_customer_experience["Products_Purchased"] < lower) | (df_customer_experience["Num_Interactions"] > upper)]
print(outliers.shape[0])

#Products_Viewed için aykırı değer bulunmuyor

sns.boxplot(x=df_customer_experience['Products_Viewed'])
plt.title('Products_Viewed - Boxplot')
plt.show()

#kontrol amaçlı sayısal olarak inceleniyor, aykırı değer yok.
Q1 = df_customer_experience["Products_Viewed"].quantile(0.25)
Q3 = df_customer_experience["Products_Viewed"].quantile(0.75)
IQR = Q3 - Q1
lower = Q1 - 1.5 * IQR
upper = Q3 + 1.5 * IQR

outliers = df_customer_experience[(df_customer_experience["Products_Viewed"] < lower) | (df_customer_experience["Num_Interactions"] > upper)]
print(outliers.shape[0])

#Time_Spent_on_Site için aykırı deper bulunmuyor
sns.boxplot(x=df_customer_experience['Time_Spent_on_Site'])
plt.title('Time_Spent_on_Site - Boxplot')
plt.show()

#kontrol amaçlı sayısal olarak inceleniyor, aykırı değer yok.
Q1 = df_customer_experience["Time_Spent_on_Site"].quantile(0.25)
Q3 = df_customer_experience["Time_Spent_on_Site"].quantile(0.75)
IQR = Q3 - Q1
lower = Q1 - 1.5 * IQR
upper = Q3 + 1.5 * IQR

outliers = df_customer_experience[(df_customer_experience["Time_Spent_on_Site"] < lower) | (df_customer_experience["Num_Interactions"] > upper)]
print(outliers.shape[0])

# Satisfaction_Score değişkeni sınırları belli bir değişken olduğu yanlış veri girişi olup olmadığı kontol ediliyor
#aykırı değer bulunmuyor
sns.boxplot(x=df_customer_experience['Satisfaction_Score'])
plt.title('Satisfaction_Score - Boxplot')
plt.show()

#kategorik değişkenlerin grafiklerinin oluşturulması
#Erkek ve kadın müşteriler birbirine yakın sayıda, dengeli.

sns.catplot(x="Gender", kind="count",data=df_customer_experience)

# Rural (kırsal)dan gelen müşterilerin sayısı şehirden gelen(Suburban ve Urban) biraz daha az. Şehirli müşteriler az miktar fazla ve eşit.
sns.catplot(x="Location", kind="count",data=df_customer_experience)

# Yaklaşık 700 müşteri elde tutulmuş (Retained), yaklaşık 300’ü elde tutulalamış (Churned). Genel elde tutma oranı iyi görünüyor
sns.catplot(x="Retention_Status", kind="count",data=df_customer_experience)

#Numerik değişkenlerin dağılım grafikleri
#En kalabalık yaş grubu 40–50 civarı. yaş aralığı 19-69'tur.

sns.histplot(df_customer_experience['Age'], kde=True)
plt.title('Age Distribution')
plt.show()

#1–2 kez, orta düzeyde 7–8 ve sık 13–14 kez etkileşime giren kullanıcılar olarak 3 yerde yoğunlaşma görülüyor.
sns.histplot(df_customer_experience['Num_Interactions'], kde=True)
plt.title('Number of Interactions Distribution')
plt.show()

#Geribildirim puanlarının genel olarak birbirine yakın yoğunlukta olduğu görülmektedir. 3 puanın biraz daha yüksek yoğunlukta olduğu görülmekte.
sns.histplot(df_customer_experience['Feedback_Score'], kde=True)
plt.title('Feedback Score Distribution')
plt.show()

# uç değerlerde alım yoğunluğu az olup 7-14 arası alım yoğunluğunun fazla oluğu görülmektedir.
sns.histplot(df_customer_experience['Products_Purchased'], kde=True)
plt.title('Products Purchased Distribution')
plt.show()

# Görüntülenmenin 20–30 ürün aralığında en yüksek yoğunlukta uç değerlerde düşük olduğu görülmektedir.
sns.histplot(df_customer_experience['Products_Viewed'], kde=True)
plt.title('Products Viewed Distribution')
plt.show()

# Sitede geçirilen zamanın Uç değerler hariç dengeli olduğu görülmektedir.
sns.histplot(df_customer_experience['Time_Spent_on_Site'], kde=True)
plt.title('Time Spent on Site Distribution')
plt.show()

# Memnuniyet skorunun genel olarak dengeli olduğu yalnızca 2 ve 7 puanlarda hafifçe daha yüksek yoğunlukta olduğu görülmektedir.
sns.histplot(df_customer_experience['Satisfaction_Score'], kde=True)
plt.title('Satisfaction Score Distribution')
plt.show()

#retentation status(Müşteri Elde Tutma Durumu)nu etkileyen değişkenleri inceleyelim

#Oluşturulan grafikte cinsiyetin müşteri elde tutulma oranı üzerinde anlamlı bir farklılık yaratmadığı görülmektedir.
sns.catplot(x="Retention_Status",kind="count",hue="Gender", data=df_customer_experience,palette="Set1")

#Grafiğe göre retention oranları (tutma oranları) benzer; Suburban (banliyö) ve Rural (kırsal) bölgelerde hafif daha yüksek, Urban (kentsel) bölgede biraz daha düşük olsa da üç bölge arasında güçlü bir ayrım gözlenmiyor

sns.catplot(x="Retention_Status",kind="count",hue="Location", data=df_customer_experience,palette="Set1")

#mean değerlerini inceleyelim
df_customer_experience.groupby('Location')['Retention_Status_Encoded'].mean()

#Grafikte retained kullanıcıların memnuniyet puanlarının medyanı 6 iken churned kullanıcılarınki 5’tir; bu da memnuniyetin retention üzerinde olumlu bir etkisi olduğunu göstermeketedir
plt.figure(figsize=(8,5))
sns.boxplot(x="Retention_Status",y="Satisfaction_Score", data=df_customer_experience)

# İstatiksel olarak mean,medianları inceleyelim
df_customer_experience.groupby("Retention_Status")["Satisfaction_Score"].mean()

df_customer_experience.groupby("Retention_Status")["Satisfaction_Score"].median()

##Grafikte geri bildirim skorlarının (Satisfaction Score)nun elde tutulan ve tutulamayan müşterilerin boxlarının aynı seviyeye çok yakın olmaları bu değişkenin retentation üzerinde etkili olmadığını göstermektedir.
plt.figure(figsize=(8,5))
sns.boxplot(x="Retention_Status",y="Feedback_Score", data=df_customer_experience)

#Time_Spent_on_Site boxplot’una göre elde tutulan müşterilerin medyan oturum süresi (~33 dk), tutulamayanlara (~31 dk) göre biraz daha yüksek; ancak bu fark, memnuniyet puanlarındaki fark kadar belirgin değil, dolayısıyla süre faktörünün etkisi sınırlı görünüyor
sns.boxplot(x="Retention_Status",y="Time_Spent_on_Site", data=df_customer_experience)

# İstatiksel olarak mean,medianları inceleyelim
df_customer_experience.groupby('Retention_Status')['Satisfaction_Score'].mean()

df_customer_experience.groupby("Retention_Status")["Time_Spent_on_Site"].median()

## Kapanış Bulguları
#Memnuniyet skoru yükseldikçe retention artıyor** (retained medyan 6, churned 5).
#Sitede geçirilen süre retained grupta biraz daha uzun**, fakat etkisi memnuniyete göre zayıf.
#Feedback puanı, cinsiyet, konum ve etkileşim sayısı retention’da belirgin fark yaratmadı.
#Öncelik: Memnuniyeti artırmak ve site deneyimini iyileştirmek, müşteri bağlılığını güçlendirecek en etkili adım.

#Eksik değer ve kritik aykırı değer yok.

#Temel İstatistikler: Sayısal değişkenler (yaş, etkileşim, süre, puanlar) beklenen aralıklarda; ortalama–medyan değerleri birbirine yakın.